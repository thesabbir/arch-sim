# Python Django Application Test
test:
  name: 'Python Django Web App Test'
  description: 'Test a Python Django application with PostgreSQL'
  author: 'Architecture Simulator'

architecture:
  name: 'Django Web Application'
  description: 'Python Django app with PostgreSQL database'

  application:
    language: 'python'
    runtime: 'python'
    framework: 'django'
    version: '4.x'

  databases:
    primary:
      type: 'postgresql'
      provider: 'supabase'
      plan: 'free'
      size: 'small'

    cache:
      type: 'redis'
      provider: 'upstash'
      plan: 'free'
      size: 'small'

  hosting:
    backend:
      provider: 'railway'
      service_type: 'web_service'
      instance_type: 'hobby'
      auto_scaling: false

  services:
    monitoring:
      error_tracking:
        provider: 'rollbar'
        plan: 'essentials'

  load_profile:
    concurrent_users: 200
    requests_per_second: 100
    peak_multiplier: 3
    data_size: '5gb'
    read_write_ratio: '70:30'
    geographic_distribution:
      - region: 'us-west'
        percentage: 60
      - region: 'eu-west'
        percentage: 40

  performance_targets:
    response_time_p95: 300
    uptime_sla: 99.9
    throughput_rps: 200

  budget:
    monthly_limit: 100
    currency: 'usd'
    alerts_at: 75
    optimization_priority: 'balanced'

  development:
    team_size: 2
    deployment_frequency: 'daily'
    monitoring_level: 'standard'
    compliance_requirements: []

# Test expectations
expectations:
  validation:
    should_be_valid: true
    max_issues: 0
    max_warnings: 3

  performance:
    min_rps: 800
    max_response_time: 300
    should_meet_targets: true

  cost:
    max_monthly_cost: 100
    should_be_within_budget: true
    max_budget_usage: 100

  recommendations:
    max_critical: 0
    max_high: 3
    should_include_types: ['caching']
